"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_pnpm_thirdweb-dev_sdk_4_0_54_ethers_5_7_2_typescript_4_9_5_node_modules_thirdweb-7f2a7b"],{

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-e65ec1fb.browser.esm.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-e65ec1fb.browser.esm.js ***!
  \***************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ StandardErc20; }\n/* harmony export */ });\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _erc_20_41afddd1_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./erc-20-41afddd1.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-20-41afddd1.browser.esm.js\");\n\n\n\n/**\n * Standard ERC20 Token functions\n * @remarks Basic functionality for a ERC20 contract that handles all unit transformation for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.token.transfer(walletAddress, amount);\n * ```\n * @public\n */\nclass StandardErc20 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc20 = new _erc_20_41afddd1_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.E(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  /**\n   * @internal\n   */\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the token Metadata (name, symbol, etc...)\n   *\n   * @example\n   * ```javascript\n   * const token = await contract.get();\n   * ```\n   * @returns The token metadata\n   */\n  async get() {\n    return this.erc20.get();\n  }\n\n  /**\n   * Get Token Balance for the currently connected wallet\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.balance();\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */\n  async balance() {\n    return await this.erc20.balance();\n  }\n\n  /**\n   * Get Token Balance\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */\n  async balanceOf(address) {\n    return this.erc20.balanceOf(address);\n  }\n\n  /**\n   * The total supply for this token\n   * @remarks Get how much supply has been minted\n   * @example\n   * ```javascript\n   * const balance = await contract.totalSupply();\n   * ```\n   */\n  async totalSupply() {\n    return await this.erc20.totalSupply();\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of a 'spender' wallet over the connected wallet's funds - the allowance of a different address for a token is the amount of tokens that the `spender` wallet is allowed to spend on behalf of the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token allowance\n   * const spenderAddress = \"0x...\";\n   * const allowance = await contract.allowance(spenderAddress);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */\n  async allowance(spender) {\n    return await this.erc20.allowance(spender);\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of one wallet over another wallet's funds - the allowance of a different address for a token is the amount of tokens that the wallet is allowed to spend on behalf of the specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet who owns the funds\n   * const owner = \"{{wallet_address}}\";\n   * // Address of the wallet to check token allowance\n   * const spender = \"0x...\";\n   * const allowance = await contract.allowanceOf(owner, spender);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */\n  async allowanceOf(owner, spender) {\n    return await this.erc20.allowanceOf(owner, spender);\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Transfer Tokens\n   *\n   * @remarks Transfer tokens from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The amount of tokens you want to send\n   * const amount = 0.1;\n   * await contract.transfer(toAddress, amount);\n   * ```\n   */\n  transfer = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(async (to, amount) => {\n    return this.erc20.transfer.prepare(to, amount);\n  });\n\n  /**\n   * Transfer Tokens From Address\n   *\n   * @remarks Transfer tokens from one wallet to another\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const fromAddress = \"{{wallet_address}}\";\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The number of tokens you want to send\n   * const amount = 1.2\n   * // Note that the connected wallet must have approval to transfer the tokens of the fromAddress\n   * await contract.transferFrom(fromAddress, toAddress, amount);\n   * ```\n   */\n  transferFrom = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(async (from, to, amount) => {\n    return this.erc20.transferFrom.prepare(from, to, amount);\n  });\n\n  /**\n   * Allows the specified `spender` wallet to transfer the given `amount` of tokens to another wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to allow transfers from\n   * const spenderAddress = \"0x...\";\n   * // The number of tokens to give as allowance\n   * const amount = 100\n   * await contract.setAllowance(spenderAddress, amount);\n   * ```\n   */\n  setAllowance = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(async (spender, amount) => {\n    return this.erc20.setAllowance.prepare(spender, amount);\n  });\n\n  /**\n   * Transfer Tokens To Many Wallets\n   *\n   * @remarks Mint tokens from the connected wallet to many wallets\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 100, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 100,\n   *  }\n   * ]\n   *\n   * await contract.transferBatch(data);\n   * ```\n   */\n  transferBatch = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(async args => {\n    return this.erc20.transferBatch.prepare(args);\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-e65ec1fb.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/token-019dfb33.browser.esm.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/token-019dfb33.browser.esm.js ***!
  \*****************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: function() { return /* binding */ Token; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"./node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index-bb4cd7b2.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/index-bb4cd7b2.browser.esm.js\");\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contract-appuri-6693c1a8.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-appuri-6693c1a8.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fetchCurrencyValue-0cc57ba1.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-0cc57ba1.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./contract-interceptor-d7b164a7.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./contract-platform-fee-fda88a0f.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-fda88a0f.browser.esm.js\");\n/* harmony import */ var _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-roles-65ac12a4.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-roles-65ac12a4.browser.esm.js\");\n/* harmony import */ var _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contract-sales-5f56e732.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-sales-5f56e732.browser.esm.js\");\n/* harmony import */ var _erc_20_41afddd1_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./erc-20-41afddd1.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-20-41afddd1.browser.esm.js\");\n/* harmony import */ var _erc_20_standard_e65ec1fb_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./erc-20-standard-e65ec1fb.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-e65ec1fb.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Manages history for Token contracts\n * @public\n */\nclass TokenERC20History {\n  constructor(contractWrapper, events) {\n    this.contractWrapper = contractWrapper;\n    this.events = events;\n  }\n\n  /**\n   * Get all holder balances\n   *\n   * @remarks Lets you get all token holders and their corresponding balances\n   * @returns  A JSON object of all token holders and their corresponding balances\n   * @example\n   * ```javascript\n   * const allHolderBalances = await contract.history.getAllHolderBalances();\n   * ```\n   */\n  async getAllHolderBalances() {\n    const a = await this.events.getEvents(\"Transfer\");\n    const txns = a.map(b => b.data);\n    const balances = {};\n    txns.forEach(item => {\n      const from = item?.from;\n      const to = item?.to;\n      const amount = item?.value;\n      if (!(from === ethers__WEBPACK_IMPORTED_MODULE_5__.constants.AddressZero)) {\n        if (!(from in balances)) {\n          balances[from] = ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(0);\n        }\n        balances[from] = balances[from].sub(amount);\n      }\n      if (!(to === ethers__WEBPACK_IMPORTED_MODULE_5__.constants.AddressZero)) {\n        if (!(to in balances)) {\n          balances[to] = ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(0);\n        }\n        balances[to] = balances[to].add(amount);\n      }\n    });\n    const entries = Object.entries(balances);\n    const results = await Promise.all(entries.map(_ref => {\n      let [, value] = _ref;\n      return (0,_fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.a)(this.contractWrapper.getProvider(), this.contractWrapper.address, value);\n    }));\n    return entries.map((_ref2, index) => {\n      let [addr] = _ref2;\n      return {\n        holder: addr,\n        balance: results[index]\n      };\n    });\n  }\n}\n\n/**\n * Create a standard crypto token or cryptocurrency.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"token\");\n * ```\n *\n * @internal\n * @deprecated use contract.erc20 instead\n */\nclass Token extends _erc_20_standard_e65ec1fb_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.S {\n  static contractRoles = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dC;\n\n  /**\n   * Signature Minting\n   * @remarks Generate tokens that can be minted only with your own signature, attaching your own set of mint conditions.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the tokens\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * ```\n   */\n\n  /**\n   * @internal\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cr(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bj.parse(abi || []);\n    this.metadata = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.C(this.contractWrapper, _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ca, this.storage);\n    this.app = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.b(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper, Token.contractRoles);\n    this.sales = new _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.C(this.contractWrapper);\n    this.events = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a(this.contractWrapper);\n    this.history = new TokenERC20History(this.contractWrapper, this.events);\n    this.encoder = new _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(this.contractWrapper);\n    this.estimator = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.G(this.contractWrapper);\n    this.platformFees = new _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.C(this.contractWrapper);\n    this.interceptor = new _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper);\n    this.signature = new _erc_20_41afddd1_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.a(this.contractWrapper, this.roles);\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get your wallet voting power for the current checkpoints\n   *\n   * @returns The amount of voting power in tokens\n   */\n  async getVoteBalance() {\n    return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress());\n  }\n  async getVoteBalanceOf(account) {\n    return await this.erc20.getValue(await this.contractWrapper.read(\"getVotes\", [account]));\n  }\n\n  /**\n   * Get your voting delegatee address\n   *\n   * @returns The address of your vote delegatee\n   */\n  async getDelegation() {\n    return await this.getDelegationOf(await this.contractWrapper.getSignerAddress());\n  }\n\n  /**\n   * Get a specific address voting delegatee address\n   *\n   * @returns The address of your vote delegatee\n   */\n  async getDelegationOf(account) {\n    return await this.contractWrapper.read(\"delegates\", [await (0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aL)(account)]);\n  }\n\n  /**\n   * Get whether users can transfer tokens from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [(0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.H)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_5__.constants.AddressZero]);\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Mint Tokens for the connected wallet\n   *\n   * @remarks See {@link Token.mintTo}\n   */\n  mint = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.f)(async amount => {\n    return this.erc20.mint.prepare(amount);\n  });\n\n  /**\n   * Mint Tokens\n   *\n   * @remarks Mint tokens to a specified address.\n   *\n   * @example\n   * ```javascript\n   * const toAddress = \"{{wallet_address}}\"; // Address of the wallet you want to mint the tokens to\n   * const amount = \"1.5\"; // The amount of this token you want to mint\n   *\n   * await contract.mintTo(toAddress, amount);\n   * ```\n   */\n  mintTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.f)(async (to, amount) => {\n    return this.erc20.mintTo.prepare(to, amount);\n  });\n\n  /**\n   * Construct a mint transaction without executing it.\n   * This is useful for estimating the gas cost of a mint transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param receiver - Address you want to send the token to\n   * @param amount - The amount of tokens you want to mint\n   *\n   * @deprecated Use `contract.mint.prepare(...args)` instead\n   */\n  async getMintTransaction(to, amount) {\n    return this.erc20.getMintTransaction(to, amount);\n  }\n\n  /**\n   * Mint Tokens To Many Wallets\n   *\n   * @remarks Mint tokens to many wallets in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 0.2, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 1.4,\n   *  }\n   * ]\n   *\n   * await contract.mintBatchTo(data);\n   * ```\n   */\n  mintBatchTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.f)(async args => {\n    return this.erc20.mintBatchTo.prepare(args);\n  });\n\n  /**\n   * Lets you delegate your voting power to the delegateeAddress\n   *\n   * @param delegateeAddress - delegatee wallet address\n   * @alpha\n   */\n  delegateTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.f)(async delegateeAddress => {\n    return _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"delegate\",\n      args: [await (0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aL)(delegateeAddress)]\n    });\n  });\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the connected wallet\n   *\n   * @example\n   * ```javascript\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burnTokens(amount);\n   * ```\n   */\n  burn = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.f)(amount => {\n    return this.erc20.burn.prepare(amount);\n  });\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the specified wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const holderAddress = \"{{wallet_address}}\";\n   *\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burnFrom(holderAddress, amount);\n   * ```\n   */\n  burnFrom = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.f)(async (holder, amount) => {\n    return this.erc20.burnFrom.prepare(holder, amount);\n  });\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vQHRoaXJkd2ViLWRlditzZGtANC4wLjU0X2V0aGVyc0A1LjcuMl90eXBlc2NyaXB0QDQuOS41L25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L3Nkay9kaXN0L3Rva2VuLTAxOWRmYjMzLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ2tKO0FBQ3ZGO0FBQzBDO0FBQ3RDO0FBQ25CO0FBQ0M7QUFDYjtBQUNNO0FBQ0w7QUFDQTtBQUNsRTtBQUNpQjtBQUNBO0FBQ047QUFDVDtBQUNEO0FBQ29EO0FBQ1Q7QUFDUTtBQUNHO0FBQ0c7QUFDYjtBQUNNO0FBQ0U7QUFDSjtBQUNTO0FBQ0w7QUFDQztBQUNDO0FBQ0Y7QUFDQTtBQUNQO0FBQ1U7QUFDVztBQUNmO0FBQ0o7QUFDTTtBQUNLO0FBQ0c7QUFDSjtBQUNMO0FBQ0U7QUFDSjtBQUNBO0FBQ0c7QUFDQztBQUNDO0FBQ1I7QUFDTTtBQUNLO0FBQ0c7QUFDZjtBQUNRO0FBQ0Y7QUFDSTtBQUNGO0FBQ0s7QUFDTjtBQUNSO0FBQ1U7QUFDRjtBQUNDO0FBQ1Q7QUFDTztBQUNGO0FBQ1U7QUFDVjtBQUNBO0FBQ0o7QUFDRDtBQUNNO0FBQ0M7QUFDQztBQUNJO0FBQ0E7QUFDRztBQUNkO0FBQ2xDO0FBQ0g7QUFDUTtBQUNrQjtBQUNRO0FBQ2hDO0FBQ29CO0FBQ1U7QUFDckI7QUFDbUI7QUFDdkM7O0FBRWQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2Q0FBUztBQUM5QjtBQUNBLDJCQUEyQiw2Q0FBUztBQUNwQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNkNBQVM7QUFDNUI7QUFDQSx5QkFBeUIsNkNBQVM7QUFD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Li9ub2RlX21vZHVsZXMvLnBucG0vQHRoaXJkd2ViLWRlditzZGtANC4wLjU0X2V0aGVyc0A1LjcuMl90eXBlc2NyaXB0QDQuOS41L25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L3Nkay9kaXN0L3Rva2VuLTAxOWRmYjMzLmJyb3dzZXIuZXNtLmpzPzcyMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uc3RhbnRzLCBCaWdOdW1iZXIgfSBmcm9tICdldGhlcnMnO1xuaW1wb3J0IHsgZEMgYXMgTkZUX0JBU0VfQ09OVFJBQ1RfUk9MRVMsIGNyIGFzIENvbnRyYWN0V3JhcHBlciwgYmogYXMgQWJpU2NoZW1hLCBjYSBhcyBUb2tlbkVyYzIwQ29udHJhY3RTY2hlbWEsIGFMIGFzIHJlc29sdmVBZGRyZXNzLCBIIGFzIGdldFJvbGVIYXNoIH0gZnJvbSAnLi9pbmRleC1iYjRjZDdiMi5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBmIGFzIGJ1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbiwgVCBhcyBUcmFuc2FjdGlvbiB9IGZyb20gJy4vdHJhbnNhY3Rpb25zLTc5MWEzM2IzLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IEMgYXMgQ29udHJhY3RNZXRhZGF0YSwgYiBhcyBDb250cmFjdEFwcFVSSSwgYSBhcyBDb250cmFjdEV2ZW50cywgRyBhcyBHYXNDb3N0RXN0aW1hdG9yIH0gZnJvbSAnLi9jb250cmFjdC1hcHB1cmktNjY5M2MxYTguYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgYSBhcyBmZXRjaEN1cnJlbmN5VmFsdWUsIEMgYXMgQ29udHJhY3RFbmNvZGVyIH0gZnJvbSAnLi9mZXRjaEN1cnJlbmN5VmFsdWUtMGNjNTdiYTEuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgQyBhcyBDb250cmFjdEludGVyY2VwdG9yIH0gZnJvbSAnLi9jb250cmFjdC1pbnRlcmNlcHRvci1kN2IxNjRhNy5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBDIGFzIENvbnRyYWN0UGxhdGZvcm1GZWUgfSBmcm9tICcuL2NvbnRyYWN0LXBsYXRmb3JtLWZlZS1mZGE4OGEwZi5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBDIGFzIENvbnRyYWN0Um9sZXMgfSBmcm9tICcuL2NvbnRyYWN0LXJvbGVzLTY1YWMxMmE0LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IEMgYXMgQ29udHJhY3RQcmltYXJ5U2FsZSB9IGZyb20gJy4vY29udHJhY3Qtc2FsZXMtNWY1NmU3MzIuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgYSBhcyBFcmMyMFNpZ25hdHVyZU1pbnRhYmxlIH0gZnJvbSAnLi9lcmMtMjAtNDFhZmRkZDEuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgUyBhcyBTdGFuZGFyZEVyYzIwIH0gZnJvbSAnLi9lcmMtMjAtc3RhbmRhcmQtZTY1ZWMxZmIuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0ICd6b2QnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NoYWlucyc7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY3J5cHRvJztcbmltcG9ydCAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0ICdibi5qcyc7XG5pbXBvcnQgJ2JzNTgnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUJ1cm5hYmxlRVJDMjAuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wRVJDMjBfVjIuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcFNpbmdsZVBoYXNlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BTaW5nbGVQaGFzZV9WMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMyMC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMyMFBlcm1pdC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lNaW50YWJsZUVSQzIwLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU11bHRpY2FsbC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lTaWduYXR1cmVNaW50RVJDMjAuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMjBNZXRhZGF0YS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lCdXJuYWJsZUVSQzcyMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lDbGFpbWFibGVFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRGVsYXllZFJldmVhbC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wRVJDNzIxX1YzLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzcyMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkM3MjFFbnVtZXJhYmxlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzcyMUFRdWVyeWFibGVVcGdyYWRlYWJsZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkM3MjFTdXBwbHkuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTGF6eU1pbnQuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTWludGFibGVFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JU2lnbmF0dXJlTWludEVSQzcyMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lTaWduYXR1cmVNaW50RVJDNzIxX1YxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvTGF6eU1pbnRXaXRoVGllcl9WMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL1NoYXJlZE1ldGFkYXRhLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvem9yYV9JRVJDNzIxRHJvcC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lMb3lhbHR5Q2FyZC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lORlRNZXRhZGF0YS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkM3MjFNZXRhZGF0YS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lCdXJuYWJsZUVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQ2xhaW1hYmxlRVJDMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wRVJDMTE1NV9WMi5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wU2luZ2xlUGhhc2UxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BTaW5nbGVQaGFzZTExNTVfVjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMxMTU1TWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMTE1NVN1cHBseS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMxMTU1RW51bWVyYWJsZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lNaW50YWJsZUVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JU2lnbmF0dXJlTWludEVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMjc3MUNvbnRleHQuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQXBwVVJJLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUNvbnRyYWN0TWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRGlyZWN0TGlzdGluZ3MuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRW5nbGlzaEF1Y3Rpb25zLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU9mZmVycy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lQYWNrVlJGRGlyZWN0Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVBlcm1pc3Npb25zLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVBlcm1pc3Npb25zRW51bWVyYWJsZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lQbGF0Zm9ybUZlZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lQcmltYXJ5U2FsZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lSb3lhbHR5Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvT3duYWJsZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBaXJkcm9wRVJDMjAuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWlyZHJvcEVSQzcyMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBaXJkcm9wRVJDMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBY2NvdW50RmFjdG9yeUNvcmUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWNjb3VudFBlcm1pc3Npb25zLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFjY291bnRQZXJtaXNzaW9uc19WMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBY2NvdW50Lmpzb24nO1xuaW1wb3J0ICdldGhlcnMvbGliL3V0aWxzJztcbmltcG9ydCAnZXZlbnRlbWl0dGVyMyc7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvc3RvcmFnZSc7XG5pbXBvcnQgJy4vYXNzZXJ0RW5hYmxlZC01MjFlZjY3OC5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJy4vZHJvcC1jbGFpbS1jb25kaXRpb25zLTEyNTQzNmU1LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCAnZmFzdC1kZWVwLWVxdWFsJztcbmltcG9ydCAnLi9zaWduYXR1cmUtYjEwOTE2MzUuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0ICcuL25vcm1hbGl6ZVByaWNlVmFsdWUtOGIwYTg4ZWIuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L21lcmtsZXRyZWUnO1xuaW1wb3J0ICcuL3NldEVyYzIwQWxsb3dhbmNlLWY5ODM3ODRjLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCAndXVpZCc7XG5cbi8qKlxuICogTWFuYWdlcyBoaXN0b3J5IGZvciBUb2tlbiBjb250cmFjdHNcbiAqIEBwdWJsaWNcbiAqL1xuY2xhc3MgVG9rZW5FUkMyMEhpc3Rvcnkge1xuICBjb25zdHJ1Y3Rvcihjb250cmFjdFdyYXBwZXIsIGV2ZW50cykge1xuICAgIHRoaXMuY29udHJhY3RXcmFwcGVyID0gY29udHJhY3RXcmFwcGVyO1xuICAgIHRoaXMuZXZlbnRzID0gZXZlbnRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbGwgaG9sZGVyIGJhbGFuY2VzXG4gICAqXG4gICAqIEByZW1hcmtzIExldHMgeW91IGdldCBhbGwgdG9rZW4gaG9sZGVycyBhbmQgdGhlaXIgY29ycmVzcG9uZGluZyBiYWxhbmNlc1xuICAgKiBAcmV0dXJucyAgQSBKU09OIG9iamVjdCBvZiBhbGwgdG9rZW4gaG9sZGVycyBhbmQgdGhlaXIgY29ycmVzcG9uZGluZyBiYWxhbmNlc1xuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBqYXZhc2NyaXB0XG4gICAqIGNvbnN0IGFsbEhvbGRlckJhbGFuY2VzID0gYXdhaXQgY29udHJhY3QuaGlzdG9yeS5nZXRBbGxIb2xkZXJCYWxhbmNlcygpO1xuICAgKiBgYGBcbiAgICovXG4gIGFzeW5jIGdldEFsbEhvbGRlckJhbGFuY2VzKCkge1xuICAgIGNvbnN0IGEgPSBhd2FpdCB0aGlzLmV2ZW50cy5nZXRFdmVudHMoXCJUcmFuc2ZlclwiKTtcbiAgICBjb25zdCB0eG5zID0gYS5tYXAoYiA9PiBiLmRhdGEpO1xuICAgIGNvbnN0IGJhbGFuY2VzID0ge307XG4gICAgdHhucy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgY29uc3QgZnJvbSA9IGl0ZW0/LmZyb207XG4gICAgICBjb25zdCB0byA9IGl0ZW0/LnRvO1xuICAgICAgY29uc3QgYW1vdW50ID0gaXRlbT8udmFsdWU7XG4gICAgICBpZiAoIShmcm9tID09PSBjb25zdGFudHMuQWRkcmVzc1plcm8pKSB7XG4gICAgICAgIGlmICghKGZyb20gaW4gYmFsYW5jZXMpKSB7XG4gICAgICAgICAgYmFsYW5jZXNbZnJvbV0gPSBCaWdOdW1iZXIuZnJvbSgwKTtcbiAgICAgICAgfVxuICAgICAgICBiYWxhbmNlc1tmcm9tXSA9IGJhbGFuY2VzW2Zyb21dLnN1YihhbW91bnQpO1xuICAgICAgfVxuICAgICAgaWYgKCEodG8gPT09IGNvbnN0YW50cy5BZGRyZXNzWmVybykpIHtcbiAgICAgICAgaWYgKCEodG8gaW4gYmFsYW5jZXMpKSB7XG4gICAgICAgICAgYmFsYW5jZXNbdG9dID0gQmlnTnVtYmVyLmZyb20oMCk7XG4gICAgICAgIH1cbiAgICAgICAgYmFsYW5jZXNbdG9dID0gYmFsYW5jZXNbdG9dLmFkZChhbW91bnQpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IGVudHJpZXMgPSBPYmplY3QuZW50cmllcyhiYWxhbmNlcyk7XG4gICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKGVudHJpZXMubWFwKF9yZWYgPT4ge1xuICAgICAgbGV0IFssIHZhbHVlXSA9IF9yZWY7XG4gICAgICByZXR1cm4gZmV0Y2hDdXJyZW5jeVZhbHVlKHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFByb3ZpZGVyKCksIHRoaXMuY29udHJhY3RXcmFwcGVyLmFkZHJlc3MsIHZhbHVlKTtcbiAgICB9KSk7XG4gICAgcmV0dXJuIGVudHJpZXMubWFwKChfcmVmMiwgaW5kZXgpID0+IHtcbiAgICAgIGxldCBbYWRkcl0gPSBfcmVmMjtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGhvbGRlcjogYWRkcixcbiAgICAgICAgYmFsYW5jZTogcmVzdWx0c1tpbmRleF1cbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBzdGFuZGFyZCBjcnlwdG8gdG9rZW4gb3IgY3J5cHRvY3VycmVuY3kuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBUaGlyZHdlYlNESyB9IGZyb20gXCJAdGhpcmR3ZWItZGV2L3Nka1wiO1xuICpcbiAqIGNvbnN0IHNkayA9IG5ldyBUaGlyZHdlYlNESyhcInt7Y2hhaW5OYW1lfX1cIik7XG4gKiBjb25zdCBjb250cmFjdCA9IGF3YWl0IHNkay5nZXRDb250cmFjdChcInt7Y29udHJhY3RfYWRkcmVzc319XCIsIFwidG9rZW5cIik7XG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJuYWxcbiAqIEBkZXByZWNhdGVkIHVzZSBjb250cmFjdC5lcmMyMCBpbnN0ZWFkXG4gKi9cbmNsYXNzIFRva2VuIGV4dGVuZHMgU3RhbmRhcmRFcmMyMCB7XG4gIHN0YXRpYyBjb250cmFjdFJvbGVzID0gTkZUX0JBU0VfQ09OVFJBQ1RfUk9MRVM7XG5cbiAgLyoqXG4gICAqIFNpZ25hdHVyZSBNaW50aW5nXG4gICAqIEByZW1hcmtzIEdlbmVyYXRlIHRva2VucyB0aGF0IGNhbiBiZSBtaW50ZWQgb25seSB3aXRoIHlvdXIgb3duIHNpZ25hdHVyZSwgYXR0YWNoaW5nIHlvdXIgb3duIHNldCBvZiBtaW50IGNvbmRpdGlvbnMuXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gc2VlIGhvdyB0byBjcmFmdCBhIHBheWxvYWQgdG8gc2lnbiBpbiB0aGUgYGNvbnRyYWN0LnNpZ25hdHVyZS5nZW5lcmF0ZSgpYCBkb2N1bWVudGF0aW9uXG4gICAqIGNvbnN0IHNpZ25lZFBheWxvYWQgPSBjb250cmFjdC5zaWduYXR1cmUuZ2VuZXJhdGUocGF5bG9hZCk7XG4gICAqXG4gICAqIC8vIG5vdyBhbnlvbmUgY2FuIG1pbnQgdGhlIHRva2Vuc1xuICAgKiBjb25zdCB0eCA9IGNvbnRyYWN0LnNpZ25hdHVyZS5taW50KHNpZ25lZFBheWxvYWQpO1xuICAgKiBjb25zdCByZWNlaXB0ID0gdHgucmVjZWlwdDsgLy8gdGhlIG1pbnQgdHJhbnNhY3Rpb24gcmVjZWlwdFxuICAgKiBgYGBcbiAgICovXG5cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cblxuICBjb25zdHJ1Y3RvcihuZXR3b3JrLCBhZGRyZXNzLCBzdG9yYWdlKSB7XG4gICAgbGV0IG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9O1xuICAgIGxldCBhYmkgPSBhcmd1bWVudHMubGVuZ3RoID4gNCA/IGFyZ3VtZW50c1s0XSA6IHVuZGVmaW5lZDtcbiAgICBsZXQgY2hhaW5JZCA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ID8gYXJndW1lbnRzWzVdIDogdW5kZWZpbmVkO1xuICAgIGxldCBjb250cmFjdFdyYXBwZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gNiAmJiBhcmd1bWVudHNbNl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s2XSA6IG5ldyBDb250cmFjdFdyYXBwZXIobmV0d29yaywgYWRkcmVzcywgYWJpLCBvcHRpb25zLCBzdG9yYWdlKTtcbiAgICBzdXBlcihjb250cmFjdFdyYXBwZXIsIHN0b3JhZ2UsIGNoYWluSWQpO1xuICAgIHRoaXMuYWJpID0gQWJpU2NoZW1hLnBhcnNlKGFiaSB8fCBbXSk7XG4gICAgdGhpcy5tZXRhZGF0YSA9IG5ldyBDb250cmFjdE1ldGFkYXRhKHRoaXMuY29udHJhY3RXcmFwcGVyLCBUb2tlbkVyYzIwQ29udHJhY3RTY2hlbWEsIHRoaXMuc3RvcmFnZSk7XG4gICAgdGhpcy5hcHAgPSBuZXcgQ29udHJhY3RBcHBVUkkodGhpcy5jb250cmFjdFdyYXBwZXIsIHRoaXMubWV0YWRhdGEsIHRoaXMuc3RvcmFnZSk7XG4gICAgdGhpcy5yb2xlcyA9IG5ldyBDb250cmFjdFJvbGVzKHRoaXMuY29udHJhY3RXcmFwcGVyLCBUb2tlbi5jb250cmFjdFJvbGVzKTtcbiAgICB0aGlzLnNhbGVzID0gbmV3IENvbnRyYWN0UHJpbWFyeVNhbGUodGhpcy5jb250cmFjdFdyYXBwZXIpO1xuICAgIHRoaXMuZXZlbnRzID0gbmV3IENvbnRyYWN0RXZlbnRzKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmhpc3RvcnkgPSBuZXcgVG9rZW5FUkMyMEhpc3RvcnkodGhpcy5jb250cmFjdFdyYXBwZXIsIHRoaXMuZXZlbnRzKTtcbiAgICB0aGlzLmVuY29kZXIgPSBuZXcgQ29udHJhY3RFbmNvZGVyKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmVzdGltYXRvciA9IG5ldyBHYXNDb3N0RXN0aW1hdG9yKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLnBsYXRmb3JtRmVlcyA9IG5ldyBDb250cmFjdFBsYXRmb3JtRmVlKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmludGVyY2VwdG9yID0gbmV3IENvbnRyYWN0SW50ZXJjZXB0b3IodGhpcy5jb250cmFjdFdyYXBwZXIpO1xuICAgIHRoaXMuc2lnbmF0dXJlID0gbmV3IEVyYzIwU2lnbmF0dXJlTWludGFibGUodGhpcy5jb250cmFjdFdyYXBwZXIsIHRoaXMucm9sZXMpO1xuICB9XG5cbiAgLyoqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgKiBSRUFEIEZVTkNUSU9OU1xuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAvKipcbiAgICogR2V0IHlvdXIgd2FsbGV0IHZvdGluZyBwb3dlciBmb3IgdGhlIGN1cnJlbnQgY2hlY2twb2ludHNcbiAgICpcbiAgICogQHJldHVybnMgVGhlIGFtb3VudCBvZiB2b3RpbmcgcG93ZXIgaW4gdG9rZW5zXG4gICAqL1xuICBhc3luYyBnZXRWb3RlQmFsYW5jZSgpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRWb3RlQmFsYW5jZU9mKGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFNpZ25lckFkZHJlc3MoKSk7XG4gIH1cbiAgYXN5bmMgZ2V0Vm90ZUJhbGFuY2VPZihhY2NvdW50KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZXJjMjAuZ2V0VmFsdWUoYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZChcImdldFZvdGVzXCIsIFthY2NvdW50XSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB5b3VyIHZvdGluZyBkZWxlZ2F0ZWUgYWRkcmVzc1xuICAgKlxuICAgKiBAcmV0dXJucyBUaGUgYWRkcmVzcyBvZiB5b3VyIHZvdGUgZGVsZWdhdGVlXG4gICAqL1xuICBhc3luYyBnZXREZWxlZ2F0aW9uKCkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldERlbGVnYXRpb25PZihhd2FpdCB0aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRTaWduZXJBZGRyZXNzKCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhIHNwZWNpZmljIGFkZHJlc3Mgdm90aW5nIGRlbGVnYXRlZSBhZGRyZXNzXG4gICAqXG4gICAqIEByZXR1cm5zIFRoZSBhZGRyZXNzIG9mIHlvdXIgdm90ZSBkZWxlZ2F0ZWVcbiAgICovXG4gIGFzeW5jIGdldERlbGVnYXRpb25PZihhY2NvdW50KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWQoXCJkZWxlZ2F0ZXNcIiwgW2F3YWl0IHJlc29sdmVBZGRyZXNzKGFjY291bnQpXSk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHdoZXRoZXIgdXNlcnMgY2FuIHRyYW5zZmVyIHRva2VucyBmcm9tIHRoaXMgY29udHJhY3RcbiAgICovXG4gIGFzeW5jIGlzVHJhbnNmZXJSZXN0cmljdGVkKCkge1xuICAgIGNvbnN0IGFueW9uZUNhblRyYW5zZmVyID0gYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZChcImhhc1JvbGVcIiwgW2dldFJvbGVIYXNoKFwidHJhbnNmZXJcIiksIGNvbnN0YW50cy5BZGRyZXNzWmVyb10pO1xuICAgIHJldHVybiAhYW55b25lQ2FuVHJhbnNmZXI7XG4gIH1cblxuICAvKiogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAqIFdSSVRFIEZVTkNUSU9OU1xuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAvKipcbiAgICogTWludCBUb2tlbnMgZm9yIHRoZSBjb25uZWN0ZWQgd2FsbGV0XG4gICAqXG4gICAqIEByZW1hcmtzIFNlZSB7QGxpbmsgVG9rZW4ubWludFRvfVxuICAgKi9cbiAgbWludCA9IC8qIEBfX1BVUkVfXyAqL2J1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhc3luYyBhbW91bnQgPT4ge1xuICAgIHJldHVybiB0aGlzLmVyYzIwLm1pbnQucHJlcGFyZShhbW91bnQpO1xuICB9KTtcblxuICAvKipcbiAgICogTWludCBUb2tlbnNcbiAgICpcbiAgICogQHJlbWFya3MgTWludCB0b2tlbnMgdG8gYSBzcGVjaWZpZWQgYWRkcmVzcy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiBjb25zdCB0b0FkZHJlc3MgPSBcInt7d2FsbGV0X2FkZHJlc3N9fVwiOyAvLyBBZGRyZXNzIG9mIHRoZSB3YWxsZXQgeW91IHdhbnQgdG8gbWludCB0aGUgdG9rZW5zIHRvXG4gICAqIGNvbnN0IGFtb3VudCA9IFwiMS41XCI7IC8vIFRoZSBhbW91bnQgb2YgdGhpcyB0b2tlbiB5b3Ugd2FudCB0byBtaW50XG4gICAqXG4gICAqIGF3YWl0IGNvbnRyYWN0Lm1pbnRUbyh0b0FkZHJlc3MsIGFtb3VudCk7XG4gICAqIGBgYFxuICAgKi9cbiAgbWludFRvID0gLyogQF9fUFVSRV9fICovYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uKGFzeW5jICh0bywgYW1vdW50KSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuZXJjMjAubWludFRvLnByZXBhcmUodG8sIGFtb3VudCk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSBtaW50IHRyYW5zYWN0aW9uIHdpdGhvdXQgZXhlY3V0aW5nIGl0LlxuICAgKiBUaGlzIGlzIHVzZWZ1bCBmb3IgZXN0aW1hdGluZyB0aGUgZ2FzIGNvc3Qgb2YgYSBtaW50IHRyYW5zYWN0aW9uLCBvdmVycmlkaW5nIHRyYW5zYWN0aW9uIG9wdGlvbnMgYW5kIGhhdmluZyBmaW5lIGdyYWluZWQgY29udHJvbCBvdmVyIHRoZSB0cmFuc2FjdGlvbiBleGVjdXRpb24uXG4gICAqIEBwYXJhbSByZWNlaXZlciAtIEFkZHJlc3MgeW91IHdhbnQgdG8gc2VuZCB0aGUgdG9rZW4gdG9cbiAgICogQHBhcmFtIGFtb3VudCAtIFRoZSBhbW91bnQgb2YgdG9rZW5zIHlvdSB3YW50IHRvIG1pbnRcbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBjb250cmFjdC5taW50LnByZXBhcmUoLi4uYXJncylgIGluc3RlYWRcbiAgICovXG4gIGFzeW5jIGdldE1pbnRUcmFuc2FjdGlvbih0bywgYW1vdW50KSB7XG4gICAgcmV0dXJuIHRoaXMuZXJjMjAuZ2V0TWludFRyYW5zYWN0aW9uKHRvLCBhbW91bnQpO1xuICB9XG5cbiAgLyoqXG4gICAqIE1pbnQgVG9rZW5zIFRvIE1hbnkgV2FsbGV0c1xuICAgKlxuICAgKiBAcmVtYXJrcyBNaW50IHRva2VucyB0byBtYW55IHdhbGxldHMgaW4gb25lIHRyYW5zYWN0aW9uLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBqYXZhc2NyaXB0XG4gICAqIC8vIERhdGEgb2YgdGhlIHRva2VucyB5b3Ugd2FudCB0byBtaW50XG4gICAqIGNvbnN0IGRhdGEgPSBbXG4gICAqICAge1xuICAgKiAgICAgdG9BZGRyZXNzOiBcInt7d2FsbGV0X2FkZHJlc3N9fVwiLCAvLyBBZGRyZXNzIHRvIG1pbnQgdG9rZW5zIHRvXG4gICAqICAgICBhbW91bnQ6IDAuMiwgLy8gSG93IG1hbnkgdG9rZW5zIHRvIG1pbnQgdG8gc3BlY2lmaWVkIGFkZHJlc3NcbiAgICogICB9LFxuICAgKiAge1xuICAgKiAgICB0b0FkZHJlc3M6IFwiMHguLi5cIixcbiAgICogICAgYW1vdW50OiAxLjQsXG4gICAqICB9XG4gICAqIF1cbiAgICpcbiAgICogYXdhaXQgY29udHJhY3QubWludEJhdGNoVG8oZGF0YSk7XG4gICAqIGBgYFxuICAgKi9cbiAgbWludEJhdGNoVG8gPSAvKiBAX19QVVJFX18gKi9idWlsZFRyYW5zYWN0aW9uRnVuY3Rpb24oYXN5bmMgYXJncyA9PiB7XG4gICAgcmV0dXJuIHRoaXMuZXJjMjAubWludEJhdGNoVG8ucHJlcGFyZShhcmdzKTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIExldHMgeW91IGRlbGVnYXRlIHlvdXIgdm90aW5nIHBvd2VyIHRvIHRoZSBkZWxlZ2F0ZWVBZGRyZXNzXG4gICAqXG4gICAqIEBwYXJhbSBkZWxlZ2F0ZWVBZGRyZXNzIC0gZGVsZWdhdGVlIHdhbGxldCBhZGRyZXNzXG4gICAqIEBhbHBoYVxuICAgKi9cbiAgZGVsZWdhdGVUbyA9IC8qIEBfX1BVUkVfXyAqL2J1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhc3luYyBkZWxlZ2F0ZWVBZGRyZXNzID0+IHtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb24uZnJvbUNvbnRyYWN0V3JhcHBlcih7XG4gICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgbWV0aG9kOiBcImRlbGVnYXRlXCIsXG4gICAgICBhcmdzOiBbYXdhaXQgcmVzb2x2ZUFkZHJlc3MoZGVsZWdhdGVlQWRkcmVzcyldXG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBCdXJuIFRva2Vuc1xuICAgKlxuICAgKiBAcmVtYXJrcyBCdXJuIHRva2VucyBoZWxkIGJ5IHRoZSBjb25uZWN0ZWQgd2FsbGV0XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gVGhlIGFtb3VudCBvZiB0aGlzIHRva2VuIHlvdSB3YW50IHRvIGJ1cm5cbiAgICogY29uc3QgYW1vdW50ID0gMS4yO1xuICAgKlxuICAgKiBhd2FpdCBjb250cmFjdC5idXJuVG9rZW5zKGFtb3VudCk7XG4gICAqIGBgYFxuICAgKi9cbiAgYnVybiA9IC8qIEBfX1BVUkVfXyAqL2J1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhbW91bnQgPT4ge1xuICAgIHJldHVybiB0aGlzLmVyYzIwLmJ1cm4ucHJlcGFyZShhbW91bnQpO1xuICB9KTtcblxuICAvKipcbiAgICogQnVybiBUb2tlbnNcbiAgICpcbiAgICogQHJlbWFya3MgQnVybiB0b2tlbnMgaGVsZCBieSB0aGUgc3BlY2lmaWVkIHdhbGxldFxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBqYXZhc2NyaXB0XG4gICAqIC8vIEFkZHJlc3Mgb2YgdGhlIHdhbGxldCBzZW5kaW5nIHRoZSB0b2tlbnNcbiAgICogY29uc3QgaG9sZGVyQWRkcmVzcyA9IFwie3t3YWxsZXRfYWRkcmVzc319XCI7XG4gICAqXG4gICAqIC8vIFRoZSBhbW91bnQgb2YgdGhpcyB0b2tlbiB5b3Ugd2FudCB0byBidXJuXG4gICAqIGNvbnN0IGFtb3VudCA9IDEuMjtcbiAgICpcbiAgICogYXdhaXQgY29udHJhY3QuYnVybkZyb20oaG9sZGVyQWRkcmVzcywgYW1vdW50KTtcbiAgICogYGBgXG4gICAqL1xuICBidXJuRnJvbSA9IC8qIEBfX1BVUkVfXyAqL2J1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhc3luYyAoaG9sZGVyLCBhbW91bnQpID0+IHtcbiAgICByZXR1cm4gdGhpcy5lcmMyMC5idXJuRnJvbS5wcmVwYXJlKGhvbGRlciwgYW1vdW50KTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgYXN5bmMgcHJlcGFyZShtZXRob2QsIGFyZ3MsIG92ZXJyaWRlcykge1xuICAgIHJldHVybiBUcmFuc2FjdGlvbi5mcm9tQ29udHJhY3RXcmFwcGVyKHtcbiAgICAgIGNvbnRyYWN0V3JhcHBlcjogdGhpcy5jb250cmFjdFdyYXBwZXIsXG4gICAgICBtZXRob2QsXG4gICAgICBhcmdzLFxuICAgICAgb3ZlcnJpZGVzXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBhc3luYyBjYWxsKGZ1bmN0aW9uTmFtZSwgYXJncywgb3ZlcnJpZGVzKSB7XG4gICAgcmV0dXJuIHRoaXMuY29udHJhY3RXcmFwcGVyLmNhbGwoZnVuY3Rpb25OYW1lLCBhcmdzLCBvdmVycmlkZXMpO1xuICB9XG59XG5cbmV4cG9ydCB7IFRva2VuIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/token-019dfb33.browser.esm.js\n"));

/***/ })

}]);
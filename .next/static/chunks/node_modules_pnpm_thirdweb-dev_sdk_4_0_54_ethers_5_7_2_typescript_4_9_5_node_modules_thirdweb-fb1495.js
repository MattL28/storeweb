"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_pnpm_thirdweb-dev_sdk_4_0_54_ethers_5_7_2_typescript_4_9_5_node_modules_thirdweb-fb1495"],{

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-8f50ffa0.browser.esm.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-8f50ffa0.browser.esm.js ***!
  \****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ StandardErc721; }\n/* harmony export */ });\n/* harmony import */ var _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-bb4cd7b2.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/index-bb4cd7b2.browser.esm.js\");\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _erc_721_926ec401_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./erc-721-926ec401.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-721-926ec401.browser.esm.js\");\n\n\n\n\n/**\n * Standard ERC721 NFT functions\n * @remarks Basic functionality for a ERC721 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.transfer(walletAddress, tokenId);\n * ```\n * @public\n */\nclass StandardErc721 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc721 = new _erc_721_926ec401_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.E(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc721.getAll(queryParams);\n  }\n\n  /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async getOwned(walletAddress, queryParams) {\n    if (walletAddress) {\n      walletAddress = await (0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aL)(walletAddress);\n    }\n    return this.erc721.getOwned(walletAddress, queryParams);\n  }\n\n  /**\n   * Get Owned Token Ids\n   * @remarks Get all the token ids of NFTs owned by a specific wallet (no metadata)\n   */\n  async getOwnedTokenIds(walletAddress) {\n    if (walletAddress) {\n      walletAddress = await (0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aL)(walletAddress);\n    }\n    return this.erc721.getOwnedTokenIds(walletAddress);\n  }\n\n  /**\n   * Get total minted supply count\n   */\n  async totalSupply() {\n    return this.erc721.totalCirculatingSupply();\n  }\n\n  /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc721.get(tokenId);\n  }\n\n  /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns The address of the owner\n   */\n  async ownerOf(tokenId) {\n    return this.erc721.ownerOf(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   */\n  async balanceOf(address) {\n    return this.erc721.balanceOf(address);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance() {\n    return this.erc721.balance();\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc721.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.transfer(walletAddress, tokenId);\n   * ```\n   */\n  transfer = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(async (to, tokenId) => {\n    return this.erc721.transfer.prepare(to, tokenId);\n  });\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  setApprovalForAll = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(async (operator, approved) => {\n    return this.erc721.setApprovalForAll.prepare(operator, approved);\n  });\n\n  /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */\n  setApprovalForToken = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(async (operator, tokenId) => {\n    return _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"approve\",\n      args: [await (0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aL)(operator), tokenId]\n    });\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-8f50ffa0.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/nft-drop-f2b4dd0a.browser.esm.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/nft-drop-f2b4dd0a.browser.esm.js ***!
  \********************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NFTDrop: function() { return /* binding */ NFTDrop; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ethers */ \"./node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _QueryParams_6f353fc1_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./QueryParams-6f353fc1.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/QueryParams-6f353fc1.browser.esm.js\");\n/* harmony import */ var _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-bb4cd7b2.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/index-bb4cd7b2.browser.esm.js\");\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contract-appuri-6693c1a8.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-appuri-6693c1a8.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./fetchCurrencyValue-0cc57ba1.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-0cc57ba1.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./contract-interceptor-d7b164a7.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js\");\n/* harmony import */ var _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contract-owner-14a6d0f9.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-owner-14a6d0f9.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./contract-platform-fee-fda88a0f.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-fda88a0f.browser.esm.js\");\n/* harmony import */ var _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-roles-65ac12a4.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-roles-65ac12a4.browser.esm.js\");\n/* harmony import */ var _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-sales-5f56e732.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-sales-5f56e732.browser.esm.js\");\n/* harmony import */ var _drop_claim_conditions_125436e5_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./drop-claim-conditions-125436e5.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/drop-claim-conditions-125436e5.browser.esm.js\");\n/* harmony import */ var _erc_721_standard_8f50ffa0_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./erc-721-standard-8f50ffa0.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-8f50ffa0.browser.esm.js\");\n/* harmony import */ var _thirdweb_checkout_66d62250_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./thirdweb-checkout-66d62250.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Setup a collection of one-of-one NFTs that are minted as users claim them.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"nft-drop\");\n * ```\n *\n * @internal\n * @deprecated use contract.erc721 instead\n */\nclass NFTDrop extends _erc_721_standard_8f50ffa0_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.S {\n  static contractRoles = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.dC;\n\n  /**\n   * @internal\n   */\n\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxClaimableSupply: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await contract.claimConditions.set(claimConditions);\n   * ```\n   */\n\n  /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   */\n\n  /**\n   * Checkout\n   * @remarks Create a FIAT currency checkout for your NFT drop.\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.cr(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.bj.parse(abi || []);\n    this.metadata = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.C(this.contractWrapper, _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.bS, this.storage);\n    this.app = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.b(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.C(this.contractWrapper, NFTDrop.contractRoles);\n    this.royalties = new _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.C(this.contractWrapper, this.metadata);\n    this.sales = new _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper);\n    this.claimConditions = new _drop_claim_conditions_125436e5_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.D(this.contractWrapper, this.metadata, this.storage);\n    this.encoder = new _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.C(this.contractWrapper);\n    this.estimator = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.G(this.contractWrapper);\n    this.events = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.a(this.contractWrapper);\n    this.platformFees = new _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper);\n    this.revealer = new _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.D(this.contractWrapper, this.storage, _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.cQ.name, () => this.erc721.nextTokenIdToMint());\n    this.interceptor = new _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.C(this.contractWrapper);\n    this.owner = new _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a(this.contractWrapper);\n    this.checkout = new _thirdweb_checkout_66d62250_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.P(this.contractWrapper);\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the total count NFTs in this drop contract, both claimed and unclaimed\n   */\n  async totalSupply() {\n    const [claimed, unclaimed] = await Promise.all([this.totalClaimedSupply(), this.totalUnclaimedSupply()]);\n    return claimed.add(unclaimed);\n  }\n\n  /**\n   * Get All Claimed NFTs\n   *\n   * @remarks Fetch all the NFTs (and their owners) that have been claimed in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTs = await contract.getAllClaimed();\n   * const firstOwner = claimedNFTs[0].owner;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata and their ownersfor all NFTs queried.\n   */\n  async getAllClaimed(queryParams) {\n    const start = ethers__WEBPACK_IMPORTED_MODULE_16__.BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = ethers__WEBPACK_IMPORTED_MODULE_16__.BigNumber.from(queryParams?.count || _QueryParams_6f353fc1_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.D).toNumber();\n    const maxId = Math.min((await this.contractWrapper.read(\"nextTokenIdToClaim\", [])).toNumber(), start + count);\n    return await Promise.all(Array.from(Array(maxId).keys()).map(i => this.get(i.toString())));\n  }\n\n  /**\n   * Get All Unclaimed NFTs\n   *\n   * @remarks Fetch all the NFTs that have been not been claimed yet in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTs = await contract.getAllUnclaimed();\n   * const firstUnclaimedNFT = unclaimedNFTs[0].name;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAllUnclaimed(queryParams) {\n    const start = ethers__WEBPACK_IMPORTED_MODULE_16__.BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = ethers__WEBPACK_IMPORTED_MODULE_16__.BigNumber.from(queryParams?.count || _QueryParams_6f353fc1_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.D).toNumber();\n    const firstTokenId = ethers__WEBPACK_IMPORTED_MODULE_16__.BigNumber.from(Math.max((await this.contractWrapper.read(\"nextTokenIdToClaim\", [])).toNumber(), start));\n    const maxId = ethers__WEBPACK_IMPORTED_MODULE_16__.BigNumber.from(Math.min((await this.contractWrapper.read(\"nextTokenIdToMint\", [])).toNumber(), firstTokenId.toNumber() + count));\n    return await Promise.all(Array.from(Array(maxId.sub(firstTokenId).toNumber()).keys()).map(i => this.erc721.getTokenMetadata(firstTokenId.add(i).toString())));\n  }\n\n  /**\n   * Get the claimed supply\n   *\n   * @remarks Get the number of claimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTCount = await contract.totalClaimedSupply();\n   * console.log(`NFTs claimed so far: ${claimedNFTCount}`);\n   * ```\n   * @returns The unclaimed supply\n   */\n  async totalClaimedSupply() {\n    return this.erc721.totalClaimedSupply();\n  }\n\n  /**\n   * Get the unclaimed supply\n   *\n   * @remarks Get the number of unclaimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTCount = await contract.totalUnclaimedSupply();\n   * console.log(`NFTs left to claim: ${unclaimedNFTCount}`);\n   * ```\n   * @returns The unclaimed supply\n   */\n  async totalUnclaimedSupply() {\n    return this.erc721.totalUnclaimedSupply();\n  }\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [(0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.H)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_16__.constants.AddressZero]);\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create a batch of unique NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many unique NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.createBatch(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   */\n  createBatch = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f)(async (metadatas, options) => {\n    return this.erc721.lazyMint.prepare(metadatas, options);\n  });\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   *\n   * @deprecated Use `contract.erc721.claim.prepare(...args)` instead\n   */\n  async getClaimTransaction(destinationAddress, quantity) {\n    let checkERC20Allowance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    return this.erc721.getClaimTransaction(destinationAddress, quantity, {\n      checkERC20Allowance\n    });\n  }\n\n  /**\n   * Claim unique NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 1; // how many unique NFTs you want to claim\n   *\n   * const tx = await contract.claimTo(address, quantity);\n   * const receipt = tx[0].receipt; // the transaction receipt\n   * const claimedTokenId = tx[0].id; // the id of the NFT claimed\n   * const claimedNFT = await tx[0].data(); // (optional) get the claimed NFT metadata\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   *\n   * @returns  an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  claimTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f)((() => {\n    var _this = this;\n    return async function (destinationAddress, quantity) {\n      let checkERC20Allowance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      return _this.erc721.claimTo.prepare(destinationAddress, quantity, {\n        checkERC20Allowance\n      });\n    };\n  })());\n\n  /**\n   * Claim NFTs to the connected wallet.\n   *\n   * @remarks See {@link NFTDrop.claimTo}\n   *\n   * @returns  an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  claim = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f)((() => {\n    var _this2 = this;\n    return async function (quantity) {\n      let checkERC20Allowance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return _this2.claimTo.prepare(await _this2.contractWrapper.getSignerAddress(), quantity, checkERC20Allowance);\n    };\n  })());\n\n  /**\n   * Burn a single NFT\n   *\n   * @param tokenId - the token Id to burn\n   *\n   * @example\n   * ```javascript\n   * const result = await contract.burnToken(tokenId);\n   * ```\n   *\n   */\n  burn = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f)(async tokenId => {\n    return this.erc721.burn.prepare(tokenId);\n  });\n\n  /******************************\n   * STANDARD ERC721 FUNCTIONS\n   ******************************/\n\n  /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc721.get(tokenId);\n  }\n\n  /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns The address of the owner\n   */\n  async ownerOf(tokenId) {\n    return this.erc721.ownerOf(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   */\n  async balanceOf(address) {\n    return this.erc721.balanceOf(address);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance() {\n    return this.erc721.balance();\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc721.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.transfer(walletAddress, tokenId);\n   * ```\n   */\n  transfer = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f)(async (to, tokenId) => {\n    return this.erc721.transfer.prepare(to, tokenId);\n  });\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  setApprovalForAll = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f)(async (operator, approved) => {\n    return this.erc721.setApprovalForAll.prepare(operator, approved);\n  });\n\n  /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */\n  setApprovalForToken = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f)(async (operator, tokenId) => {\n    return _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"approve\",\n      args: [operator, tokenId]\n    });\n  });\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/nft-drop-f2b4dd0a.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js ***!
  \*****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   P: function() { return /* binding */ PaperCheckout; }\n/* harmony export */ });\n/* harmony import */ var _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-bb4cd7b2.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/index-bb4cd7b2.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n\n\n\nconst PAPER_API_BASE = `https://paper.xyz/api`;\nconst PAPER_API_VERSION = `2022-08-12`;\n\n/**\n * @internal\n */\nconst PAPER_API_URL = `${PAPER_API_BASE}/${PAPER_API_VERSION}/platform/thirdweb`;\nconst PAPER_CHAIN_ID_MAP = {\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mainnet]: \"Ethereum\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Goerli]: \"Goerli\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Polygon]: \"Polygon\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mumbai]: \"Mumbai\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Avalanche]: \"Avalanche\"\n};\n\n/**\n * @internal\n */\nfunction parseChainIdToPaperChain(chainId) {\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(chainId in PAPER_CHAIN_ID_MAP, `chainId not supported by paper: ${chainId}`);\n  return PAPER_CHAIN_ID_MAP[chainId];\n}\n/**\n *\n * @param contractAddress - the contract address\n * @param chainId - the chain id\n * @internal\n * @returns The paper xyz contract id\n * @throws if the contract is not registered on paper xyz\n */\nasync function fetchRegisteredCheckoutId(contractAddress, chainId) {\n  const paperChain = parseChainIdToPaperChain(chainId);\n  const res = await fetch(`${PAPER_API_URL}/register-contract?contractAddress=${contractAddress}&chain=${paperChain}`);\n  const json = await res.json();\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.result.id, \"Contract is not registered with paper\");\n  return json.result.id;\n}\n\n/**\n * The parameters for creating a paper.xyz checkout link.\n * @public\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\nconst DEFAULT_PARAMS = {\n  expiresInMinutes: 15,\n  feeBearer: \"BUYER\",\n  sendEmailOnSuccess: true,\n  redirectAfterPayment: false\n};\n\n/**\n * @internal\n */\nasync function createCheckoutLinkIntent(contractId, params) {\n  const res = await fetch(`${PAPER_API_URL}/checkout-link-intent`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      contractId,\n      ...DEFAULT_PARAMS,\n      ...params,\n      metadata: {\n        ...params.metadata,\n        via_platform: \"thirdweb\"\n      },\n      // overrides that are hard coded\n      hideNativeMint: true,\n      hidePaperWallet: !!params.walletAddress,\n      hideExternalWallet: true,\n      hidePayWithCrypto: true,\n      usePaperKey: false\n    })\n  });\n  const json = await res.json();\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.checkoutLinkIntentUrl, \"Failed to create checkout link intent\");\n  return json.checkoutLinkIntentUrl;\n}\n\n/**\n * @internal\n */\nclass PaperCheckout {\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n  async getCheckoutId() {\n    return fetchRegisteredCheckoutId(this.contractWrapper.address, await this.contractWrapper.getChainID());\n  }\n  async isEnabled() {\n    try {\n      return !!(await this.getCheckoutId());\n    } catch (err) {\n      return false;\n    }\n  }\n  async createLinkIntent(params) {\n    return await createCheckoutLinkIntent(await this.getCheckoutId(), params);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vQHRoaXJkd2ViLWRlditzZGtANC4wLjU0X2V0aGVyc0A1LjcuMl90eXBlc2NyaXB0QDQuOS41L25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L3Nkay9kaXN0L3RoaXJkd2ViLWNoZWNrb3V0LTY2ZDYyMjUwLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRTtBQUN6Qjs7QUFFdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZUFBZSxHQUFHLGtCQUFrQjtBQUM3RDtBQUNBLEdBQUcsOERBQU87QUFDVixHQUFHLDhEQUFPO0FBQ1YsR0FBRyw4REFBTztBQUNWLEdBQUcsOERBQU87QUFDVixHQUFHLDhEQUFPO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDBEQUFTLG1FQUFtRSxRQUFRO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixjQUFjLHFDQUFxQyxnQkFBZ0IsU0FBUyxXQUFXO0FBQ3BIO0FBQ0EsRUFBRSwwREFBUztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYztBQUMzQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLEVBQUUsMERBQVM7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRoaXJkd2ViLWRlditzZGtANC4wLjU0X2V0aGVyc0A1LjcuMl90eXBlc2NyaXB0QDQuOS41L25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L3Nkay9kaXN0L3RoaXJkd2ViLWNoZWNrb3V0LTY2ZDYyMjUwLmJyb3dzZXIuZXNtLmpzPzZhYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYVMgYXMgQ2hhaW5JZCB9IGZyb20gJy4vaW5kZXgtYmI0Y2Q3YjIuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmNvbnN0IFBBUEVSX0FQSV9CQVNFID0gYGh0dHBzOi8vcGFwZXIueHl6L2FwaWA7XG5jb25zdCBQQVBFUl9BUElfVkVSU0lPTiA9IGAyMDIyLTA4LTEyYDtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgUEFQRVJfQVBJX1VSTCA9IGAke1BBUEVSX0FQSV9CQVNFfS8ke1BBUEVSX0FQSV9WRVJTSU9OfS9wbGF0Zm9ybS90aGlyZHdlYmA7XG5jb25zdCBQQVBFUl9DSEFJTl9JRF9NQVAgPSB7XG4gIFtDaGFpbklkLk1haW5uZXRdOiBcIkV0aGVyZXVtXCIsXG4gIFtDaGFpbklkLkdvZXJsaV06IFwiR29lcmxpXCIsXG4gIFtDaGFpbklkLlBvbHlnb25dOiBcIlBvbHlnb25cIixcbiAgW0NoYWluSWQuTXVtYmFpXTogXCJNdW1iYWlcIixcbiAgW0NoYWluSWQuQXZhbGFuY2hlXTogXCJBdmFsYW5jaGVcIlxufTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZnVuY3Rpb24gcGFyc2VDaGFpbklkVG9QYXBlckNoYWluKGNoYWluSWQpIHtcbiAgaW52YXJpYW50KGNoYWluSWQgaW4gUEFQRVJfQ0hBSU5fSURfTUFQLCBgY2hhaW5JZCBub3Qgc3VwcG9ydGVkIGJ5IHBhcGVyOiAke2NoYWluSWR9YCk7XG4gIHJldHVybiBQQVBFUl9DSEFJTl9JRF9NQVBbY2hhaW5JZF07XG59XG4vKipcbiAqXG4gKiBAcGFyYW0gY29udHJhY3RBZGRyZXNzIC0gdGhlIGNvbnRyYWN0IGFkZHJlc3NcbiAqIEBwYXJhbSBjaGFpbklkIC0gdGhlIGNoYWluIGlkXG4gKiBAaW50ZXJuYWxcbiAqIEByZXR1cm5zIFRoZSBwYXBlciB4eXogY29udHJhY3QgaWRcbiAqIEB0aHJvd3MgaWYgdGhlIGNvbnRyYWN0IGlzIG5vdCByZWdpc3RlcmVkIG9uIHBhcGVyIHh5elxuICovXG5hc3luYyBmdW5jdGlvbiBmZXRjaFJlZ2lzdGVyZWRDaGVja291dElkKGNvbnRyYWN0QWRkcmVzcywgY2hhaW5JZCkge1xuICBjb25zdCBwYXBlckNoYWluID0gcGFyc2VDaGFpbklkVG9QYXBlckNoYWluKGNoYWluSWQpO1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtQQVBFUl9BUElfVVJMfS9yZWdpc3Rlci1jb250cmFjdD9jb250cmFjdEFkZHJlc3M9JHtjb250cmFjdEFkZHJlc3N9JmNoYWluPSR7cGFwZXJDaGFpbn1gKTtcbiAgY29uc3QganNvbiA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIGludmFyaWFudChqc29uLnJlc3VsdC5pZCwgXCJDb250cmFjdCBpcyBub3QgcmVnaXN0ZXJlZCB3aXRoIHBhcGVyXCIpO1xuICByZXR1cm4ganNvbi5yZXN1bHQuaWQ7XG59XG5cbi8qKlxuICogVGhlIHBhcmFtZXRlcnMgZm9yIGNyZWF0aW5nIGEgcGFwZXIueHl6IGNoZWNrb3V0IGxpbmsuXG4gKiBAcHVibGljXG4gKi9cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5cbmNvbnN0IERFRkFVTFRfUEFSQU1TID0ge1xuICBleHBpcmVzSW5NaW51dGVzOiAxNSxcbiAgZmVlQmVhcmVyOiBcIkJVWUVSXCIsXG4gIHNlbmRFbWFpbE9uU3VjY2VzczogdHJ1ZSxcbiAgcmVkaXJlY3RBZnRlclBheW1lbnQ6IGZhbHNlXG59O1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVDaGVja291dExpbmtJbnRlbnQoY29udHJhY3RJZCwgcGFyYW1zKSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke1BBUEVSX0FQSV9VUkx9L2NoZWNrb3V0LWxpbmstaW50ZW50YCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAuLi5ERUZBVUxUX1BBUkFNUyxcbiAgICAgIC4uLnBhcmFtcyxcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIC4uLnBhcmFtcy5tZXRhZGF0YSxcbiAgICAgICAgdmlhX3BsYXRmb3JtOiBcInRoaXJkd2ViXCJcbiAgICAgIH0sXG4gICAgICAvLyBvdmVycmlkZXMgdGhhdCBhcmUgaGFyZCBjb2RlZFxuICAgICAgaGlkZU5hdGl2ZU1pbnQ6IHRydWUsXG4gICAgICBoaWRlUGFwZXJXYWxsZXQ6ICEhcGFyYW1zLndhbGxldEFkZHJlc3MsXG4gICAgICBoaWRlRXh0ZXJuYWxXYWxsZXQ6IHRydWUsXG4gICAgICBoaWRlUGF5V2l0aENyeXB0bzogdHJ1ZSxcbiAgICAgIHVzZVBhcGVyS2V5OiBmYWxzZVxuICAgIH0pXG4gIH0pO1xuICBjb25zdCBqc29uID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgaW52YXJpYW50KGpzb24uY2hlY2tvdXRMaW5rSW50ZW50VXJsLCBcIkZhaWxlZCB0byBjcmVhdGUgY2hlY2tvdXQgbGluayBpbnRlbnRcIik7XG4gIHJldHVybiBqc29uLmNoZWNrb3V0TGlua0ludGVudFVybDtcbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY2xhc3MgUGFwZXJDaGVja291dCB7XG4gIGNvbnN0cnVjdG9yKGNvbnRyYWN0V3JhcHBlcikge1xuICAgIHRoaXMuY29udHJhY3RXcmFwcGVyID0gY29udHJhY3RXcmFwcGVyO1xuICB9XG4gIGFzeW5jIGdldENoZWNrb3V0SWQoKSB7XG4gICAgcmV0dXJuIGZldGNoUmVnaXN0ZXJlZENoZWNrb3V0SWQodGhpcy5jb250cmFjdFdyYXBwZXIuYWRkcmVzcywgYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIuZ2V0Q2hhaW5JRCgpKTtcbiAgfVxuICBhc3luYyBpc0VuYWJsZWQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAhIShhd2FpdCB0aGlzLmdldENoZWNrb3V0SWQoKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGFzeW5jIGNyZWF0ZUxpbmtJbnRlbnQocGFyYW1zKSB7XG4gICAgcmV0dXJuIGF3YWl0IGNyZWF0ZUNoZWNrb3V0TGlua0ludGVudChhd2FpdCB0aGlzLmdldENoZWNrb3V0SWQoKSwgcGFyYW1zKTtcbiAgfVxufVxuXG5leHBvcnQgeyBQYXBlckNoZWNrb3V0IGFzIFAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js\n"));

/***/ })

}]);
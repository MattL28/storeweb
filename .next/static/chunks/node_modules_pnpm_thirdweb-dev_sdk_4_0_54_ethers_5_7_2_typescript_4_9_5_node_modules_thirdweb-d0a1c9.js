"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_pnpm_thirdweb-dev_sdk_4_0_54_ethers_5_7_2_typescript_4_9_5_node_modules_thirdweb-d0a1c9"],{

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/edition-drop-71b8d43d.browser.esm.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/edition-drop-71b8d43d.browser.esm.js ***!
  \************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditionDrop: function() { return /* binding */ EditionDrop; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"./node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index-bb4cd7b2.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/index-bb4cd7b2.browser.esm.js\");\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-appuri-6693c1a8.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-appuri-6693c1a8.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fetchCurrencyValue-0cc57ba1.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-0cc57ba1.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./contract-interceptor-d7b164a7.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js\");\n/* harmony import */ var _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-owner-14a6d0f9.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-owner-14a6d0f9.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./contract-platform-fee-fda88a0f.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-fda88a0f.browser.esm.js\");\n/* harmony import */ var _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contract-roles-65ac12a4.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-roles-65ac12a4.browser.esm.js\");\n/* harmony import */ var _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contract-sales-5f56e732.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-sales-5f56e732.browser.esm.js\");\n/* harmony import */ var _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./erc-1155-19e3f474.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-19e3f474.browser.esm.js\");\n/* harmony import */ var _erc_1155_standard_9662c39f_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./erc-1155-standard-9662c39f.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js\");\n/* harmony import */ var _thirdweb_checkout_66d62250_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./thirdweb-checkout-66d62250.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Manages history for Edition Drop contracts\n * @public\n */\nclass DropErc1155History {\n  constructor(events) {\n    this.events = events;\n  }\n\n  /**\n   * Get all claimer addresses\n   *\n   * @remarks Get a list of all the addresses that have claimed a token\n   * @param tokenId - the tokenId of the NFT to get the addresses of*\n   * @returns  A unique list of addresses that claimed the token\n   * @example\n   * ```javascript\n   * const tokenId = \"0\";\n   * const allClaimerAddresses = await contract.history.getAllClaimerAddresses(tokenId);\n   * ```\n   */\n  async getAllClaimerAddresses(tokenId) {\n    const a = (await this.events.getEvents(\"TokensClaimed\")).filter(e => e.data && ethers__WEBPACK_IMPORTED_MODULE_5__.BigNumber.isBigNumber(e.data.tokenId) ? e.data.tokenId.eq(tokenId) : false);\n    return Array.from(new Set(a.filter(b => typeof b.data?.claimer === \"string\").map(b => b.data.claimer)));\n  }\n}\n\n/**\n * Setup a collection of NFTs with a customizable number of each NFT that are minted as users claim them.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"edition-drop\");\n * ```\n *\n * @internal\n * @deprecated use contract.erc1155 instead\n */\nclass EditionDrop extends _erc_1155_standard_9662c39f_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.S {\n  static contractRoles = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.dC;\n\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * Configure claim conditions for each NFT\n   * @remarks Define who can claim each NFT in the edition, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxClaimableSupply: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   *\n   * const tokenId = 0; // the id of the NFT to set claim conditions on\n   * await contract.claimConditions.set(tokenId, claimConditions);\n   * ```\n   */\n\n  /**\n   * Checkout\n   * @remarks Create a FIAT currency checkout for your NFT drop.\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.cr(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.bj.parse(abi);\n    this.metadata = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.C(this.contractWrapper, _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.bW, this.storage);\n    this.app = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.b(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.C(this.contractWrapper, EditionDrop.contractRoles);\n    this.royalties = new _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper, this.metadata);\n    this.sales = new _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.C(this.contractWrapper);\n    this.claimConditions = new _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.D(this.contractWrapper, this.metadata, this.storage);\n    this.events = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a(this.contractWrapper);\n    this.history = new DropErc1155History(this.events);\n    this.encoder = new _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper);\n    this.estimator = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.G(this.contractWrapper);\n    this.platformFees = new _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.C(this.contractWrapper);\n    this.interceptor = new _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.C(this.contractWrapper);\n    this.checkout = new _thirdweb_checkout_66d62250_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.P(this.contractWrapper);\n    this.owner = new _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.a(this.contractWrapper);\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  // TODO getAllClaimerAddresses() - should be done via an indexer\n\n  /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc1155.getAll(queryParams);\n  }\n\n  /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async getOwned(walletAddress, queryParams) {\n    return this.erc1155.getOwned(walletAddress, queryParams);\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @returns The total number of NFTs minted in this contract\n   * @public\n   */\n  async getTotalCount() {\n    return this.erc1155.totalCount();\n  }\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [(0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.H)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_5__.constants.AddressZero]);\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create a batch of NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.createBatch(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   */\n  createBatch = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.f)(async (metadatas, options) => {\n    return this.erc1155.lazyMint.prepare(metadatas, options);\n  });\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   * @param claimData - Optional claim verification data (e.g. price, allowlist proof, etc...)\n   *\n   * @deprecated Use `contract.erc1155.claim.prepare(...args)` instead\n   */\n  async getClaimTransaction(destinationAddress, tokenId, quantity) {\n    let checkERC20Allowance = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    return this.erc1155.getClaimTransaction(destinationAddress, tokenId, quantity, {\n      checkERC20Allowance\n    });\n  }\n\n  /**\n   * Claim NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const tokenId = 0; // the id of the NFT you want to claim\n   * const quantity = 1; // how many NFTs you want to claim\n   *\n   * const tx = await contract.claimTo(address, tokenId, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   * @param proofs - Array of proofs\n   *\n   * @returns  Receipt for the transaction\n   */\n  claimTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.f)((() => {\n    var _this = this;\n    return async function (destinationAddress, tokenId, quantity) {\n      let checkERC20Allowance = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      return _this.erc1155.claimTo.prepare(destinationAddress, tokenId, quantity, {\n        checkERC20Allowance\n      });\n    };\n  })());\n\n  /**\n   * Claim a token to the connected wallet\n   *\n   * @remarks See {@link EditionDrop.claimTo}\n   *\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   * @param proofs - Array of proofs\n   *\n   * @returns  Receipt for the transaction\n   */\n  claim = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.f)((() => {\n    var _this2 = this;\n    return async function (tokenId, quantity) {\n      let checkERC20Allowance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      const address = await _this2.contractWrapper.getSignerAddress();\n      return _this2.claimTo.prepare(address, tokenId, quantity, checkERC20Allowance);\n    };\n  })());\n\n  /**\n   * Burn a specified amount of a NFT\n   *\n   * @param tokenId - the token Id to burn\n   * @param amount - amount to burn\n   *\n   * @example\n   * ```javascript\n   * const result = await contract.burnTokens(tokenId, amount);\n   * ```\n   */\n  burnTokens = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.f)(async (tokenId, amount) => {\n    return this.erc1155.burn.prepare(tokenId, amount);\n  });\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/edition-drop-71b8d43d.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js ***!
  \*****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ StandardErc1155; }\n/* harmony export */ });\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./erc-1155-19e3f474.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-19e3f474.browser.esm.js\");\n\n\n\n/**\n * Standard ERC1155 NFT functions\n * @remarks Basic functionality for a ERC1155 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.edition.transfer(walletAddress, tokenId, quantity);\n * ```\n * @public\n */\nclass StandardErc1155 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc1155 = new _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.E(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  ////// Standard ERC1155 functions //////\n\n  /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const nft = await contract.get(\"0\");\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc1155.get(tokenId);\n  }\n\n  /**\n   * Returns the total supply of a specific token\n   * @param tokenId - The token ID to get the total supply of\n   * @returns The total supply\n   */\n  async totalSupply(tokenId) {\n    return this.erc1155.totalSupply(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check NFT balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0; // Id of the NFT to check\n   * const balance = await contract.balanceOf(walletAddress, tokenId);\n   * ```\n   */\n  async balanceOf(address, tokenId) {\n    return this.erc1155.balanceOf(address, tokenId);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance(tokenId) {\n    return this.erc1155.balance(tokenId);\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc1155.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   * const tokenId = \"0\"; // The token ID of the NFT you want to send\n   * const amount = 3; // How many copies of the NFTs to transfer\n   * await contract.transfer(toAddress, tokenId, amount);\n   * ```\n   */\n  transfer = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((() => {\n    var _this = this;\n    return async function (to, tokenId, amount) {\n      let data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0];\n      return _this.erc1155.transfer.prepare(to, tokenId, amount, data);\n    };\n  })());\n\n  /**\n   * Transfer multiple NFTs\n   * \n   * @remarks Transfer multiple NFTs from the connected wallet to another wallet.\n   * \n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFTs to\n   * const toAddress = \"{{wallet_address}}\";\n   * // Array of token IDs of the NFTs you want to send\n   * const tokenIds = [\"0\", \"1\", \"2\"];\n   * // Array of amounts of the NFTs you want to send\n   * const amounts = [1, 2, 3];\n   * await contract.transferBatch(toAddress, tokenIds, amounts);\n   * ```\n   */\n  transferBatch = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((() => {\n    var _this2 = this;\n    return async function (to, tokenIds, amounts, fromAddress) {\n      let data = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0];\n      return _this2.erc1155.transferBatch.prepare(to, tokenIds, amounts, fromAddress, data);\n    };\n  })());\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  setApprovalForAll = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(async (operator, approved) => {\n    return this.erc1155.setApprovalForAll.prepare(operator, approved);\n  });\n\n  /**\n   * Airdrop multiple NFTs\n   *\n   * @remarks Airdrop one or multiple NFTs to the provided wallet addresses.\n   * @twfeature ERC1155\n   * @example\n   * ```javascript\n   * // The token ID of the NFT you want to airdrop\n   * const tokenId = \"0\";\n   * // Array of objects of addresses and quantities to airdrop NFTs to\n   * const addresses = [\n   *  {\n   *    address: \"0x...\",\n   *    quantity: 2,\n   *  },\n   *  {\n   *   address: \"0x...\",\n   *    quantity: 3,\n   *  },\n   * ];\n   * await contract.airdrop(tokenId, addresses);\n   *\n   * // You can also pass an array of addresses, it will airdrop 1 NFT per address\n   * const tokenId = \"0\";\n   * const addresses = [\n   *  \"0x...\", \"0x...\", \"0x...\",\n   * ]\n   * await contract.airdrop(tokenId, addresses);\n   * ```\n   */\n  airdrop = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((() => {\n    var _this3 = this;\n    return async function (tokenId, addresses, fromAddress) {\n      let data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0];\n      return _this3.erc1155.airdrop.prepare(tokenId, addresses, fromAddress, data);\n    };\n  })());\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js ***!
  \*****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   P: function() { return /* binding */ PaperCheckout; }\n/* harmony export */ });\n/* harmony import */ var _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-bb4cd7b2.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/index-bb4cd7b2.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n\n\n\nconst PAPER_API_BASE = `https://paper.xyz/api`;\nconst PAPER_API_VERSION = `2022-08-12`;\n\n/**\n * @internal\n */\nconst PAPER_API_URL = `${PAPER_API_BASE}/${PAPER_API_VERSION}/platform/thirdweb`;\nconst PAPER_CHAIN_ID_MAP = {\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mainnet]: \"Ethereum\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Goerli]: \"Goerli\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Polygon]: \"Polygon\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mumbai]: \"Mumbai\",\n  [_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Avalanche]: \"Avalanche\"\n};\n\n/**\n * @internal\n */\nfunction parseChainIdToPaperChain(chainId) {\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(chainId in PAPER_CHAIN_ID_MAP, `chainId not supported by paper: ${chainId}`);\n  return PAPER_CHAIN_ID_MAP[chainId];\n}\n/**\n *\n * @param contractAddress - the contract address\n * @param chainId - the chain id\n * @internal\n * @returns The paper xyz contract id\n * @throws if the contract is not registered on paper xyz\n */\nasync function fetchRegisteredCheckoutId(contractAddress, chainId) {\n  const paperChain = parseChainIdToPaperChain(chainId);\n  const res = await fetch(`${PAPER_API_URL}/register-contract?contractAddress=${contractAddress}&chain=${paperChain}`);\n  const json = await res.json();\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.result.id, \"Contract is not registered with paper\");\n  return json.result.id;\n}\n\n/**\n * The parameters for creating a paper.xyz checkout link.\n * @public\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\nconst DEFAULT_PARAMS = {\n  expiresInMinutes: 15,\n  feeBearer: \"BUYER\",\n  sendEmailOnSuccess: true,\n  redirectAfterPayment: false\n};\n\n/**\n * @internal\n */\nasync function createCheckoutLinkIntent(contractId, params) {\n  const res = await fetch(`${PAPER_API_URL}/checkout-link-intent`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      contractId,\n      ...DEFAULT_PARAMS,\n      ...params,\n      metadata: {\n        ...params.metadata,\n        via_platform: \"thirdweb\"\n      },\n      // overrides that are hard coded\n      hideNativeMint: true,\n      hidePaperWallet: !!params.walletAddress,\n      hideExternalWallet: true,\n      hidePayWithCrypto: true,\n      usePaperKey: false\n    })\n  });\n  const json = await res.json();\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.checkoutLinkIntentUrl, \"Failed to create checkout link intent\");\n  return json.checkoutLinkIntentUrl;\n}\n\n/**\n * @internal\n */\nclass PaperCheckout {\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n  async getCheckoutId() {\n    return fetchRegisteredCheckoutId(this.contractWrapper.address, await this.contractWrapper.getChainID());\n  }\n  async isEnabled() {\n    try {\n      return !!(await this.getCheckoutId());\n    } catch (err) {\n      return false;\n    }\n  }\n  async createLinkIntent(params) {\n    return await createCheckoutLinkIntent(await this.getCheckoutId(), params);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vQHRoaXJkd2ViLWRlditzZGtANC4wLjU0X2V0aGVyc0A1LjcuMl90eXBlc2NyaXB0QDQuOS41L25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L3Nkay9kaXN0L3RoaXJkd2ViLWNoZWNrb3V0LTY2ZDYyMjUwLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRTtBQUN6Qjs7QUFFdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZUFBZSxHQUFHLGtCQUFrQjtBQUM3RDtBQUNBLEdBQUcsOERBQU87QUFDVixHQUFHLDhEQUFPO0FBQ1YsR0FBRyw4REFBTztBQUNWLEdBQUcsOERBQU87QUFDVixHQUFHLDhEQUFPO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDBEQUFTLG1FQUFtRSxRQUFRO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixjQUFjLHFDQUFxQyxnQkFBZ0IsU0FBUyxXQUFXO0FBQ3BIO0FBQ0EsRUFBRSwwREFBUztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYztBQUMzQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLEVBQUUsMERBQVM7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRoaXJkd2ViLWRlditzZGtANC4wLjU0X2V0aGVyc0A1LjcuMl90eXBlc2NyaXB0QDQuOS41L25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L3Nkay9kaXN0L3RoaXJkd2ViLWNoZWNrb3V0LTY2ZDYyMjUwLmJyb3dzZXIuZXNtLmpzPzZhYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYVMgYXMgQ2hhaW5JZCB9IGZyb20gJy4vaW5kZXgtYmI0Y2Q3YjIuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmNvbnN0IFBBUEVSX0FQSV9CQVNFID0gYGh0dHBzOi8vcGFwZXIueHl6L2FwaWA7XG5jb25zdCBQQVBFUl9BUElfVkVSU0lPTiA9IGAyMDIyLTA4LTEyYDtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgUEFQRVJfQVBJX1VSTCA9IGAke1BBUEVSX0FQSV9CQVNFfS8ke1BBUEVSX0FQSV9WRVJTSU9OfS9wbGF0Zm9ybS90aGlyZHdlYmA7XG5jb25zdCBQQVBFUl9DSEFJTl9JRF9NQVAgPSB7XG4gIFtDaGFpbklkLk1haW5uZXRdOiBcIkV0aGVyZXVtXCIsXG4gIFtDaGFpbklkLkdvZXJsaV06IFwiR29lcmxpXCIsXG4gIFtDaGFpbklkLlBvbHlnb25dOiBcIlBvbHlnb25cIixcbiAgW0NoYWluSWQuTXVtYmFpXTogXCJNdW1iYWlcIixcbiAgW0NoYWluSWQuQXZhbGFuY2hlXTogXCJBdmFsYW5jaGVcIlxufTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZnVuY3Rpb24gcGFyc2VDaGFpbklkVG9QYXBlckNoYWluKGNoYWluSWQpIHtcbiAgaW52YXJpYW50KGNoYWluSWQgaW4gUEFQRVJfQ0hBSU5fSURfTUFQLCBgY2hhaW5JZCBub3Qgc3VwcG9ydGVkIGJ5IHBhcGVyOiAke2NoYWluSWR9YCk7XG4gIHJldHVybiBQQVBFUl9DSEFJTl9JRF9NQVBbY2hhaW5JZF07XG59XG4vKipcbiAqXG4gKiBAcGFyYW0gY29udHJhY3RBZGRyZXNzIC0gdGhlIGNvbnRyYWN0IGFkZHJlc3NcbiAqIEBwYXJhbSBjaGFpbklkIC0gdGhlIGNoYWluIGlkXG4gKiBAaW50ZXJuYWxcbiAqIEByZXR1cm5zIFRoZSBwYXBlciB4eXogY29udHJhY3QgaWRcbiAqIEB0aHJvd3MgaWYgdGhlIGNvbnRyYWN0IGlzIG5vdCByZWdpc3RlcmVkIG9uIHBhcGVyIHh5elxuICovXG5hc3luYyBmdW5jdGlvbiBmZXRjaFJlZ2lzdGVyZWRDaGVja291dElkKGNvbnRyYWN0QWRkcmVzcywgY2hhaW5JZCkge1xuICBjb25zdCBwYXBlckNoYWluID0gcGFyc2VDaGFpbklkVG9QYXBlckNoYWluKGNoYWluSWQpO1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtQQVBFUl9BUElfVVJMfS9yZWdpc3Rlci1jb250cmFjdD9jb250cmFjdEFkZHJlc3M9JHtjb250cmFjdEFkZHJlc3N9JmNoYWluPSR7cGFwZXJDaGFpbn1gKTtcbiAgY29uc3QganNvbiA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIGludmFyaWFudChqc29uLnJlc3VsdC5pZCwgXCJDb250cmFjdCBpcyBub3QgcmVnaXN0ZXJlZCB3aXRoIHBhcGVyXCIpO1xuICByZXR1cm4ganNvbi5yZXN1bHQuaWQ7XG59XG5cbi8qKlxuICogVGhlIHBhcmFtZXRlcnMgZm9yIGNyZWF0aW5nIGEgcGFwZXIueHl6IGNoZWNrb3V0IGxpbmsuXG4gKiBAcHVibGljXG4gKi9cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5cbmNvbnN0IERFRkFVTFRfUEFSQU1TID0ge1xuICBleHBpcmVzSW5NaW51dGVzOiAxNSxcbiAgZmVlQmVhcmVyOiBcIkJVWUVSXCIsXG4gIHNlbmRFbWFpbE9uU3VjY2VzczogdHJ1ZSxcbiAgcmVkaXJlY3RBZnRlclBheW1lbnQ6IGZhbHNlXG59O1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVDaGVja291dExpbmtJbnRlbnQoY29udHJhY3RJZCwgcGFyYW1zKSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke1BBUEVSX0FQSV9VUkx9L2NoZWNrb3V0LWxpbmstaW50ZW50YCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAuLi5ERUZBVUxUX1BBUkFNUyxcbiAgICAgIC4uLnBhcmFtcyxcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIC4uLnBhcmFtcy5tZXRhZGF0YSxcbiAgICAgICAgdmlhX3BsYXRmb3JtOiBcInRoaXJkd2ViXCJcbiAgICAgIH0sXG4gICAgICAvLyBvdmVycmlkZXMgdGhhdCBhcmUgaGFyZCBjb2RlZFxuICAgICAgaGlkZU5hdGl2ZU1pbnQ6IHRydWUsXG4gICAgICBoaWRlUGFwZXJXYWxsZXQ6ICEhcGFyYW1zLndhbGxldEFkZHJlc3MsXG4gICAgICBoaWRlRXh0ZXJuYWxXYWxsZXQ6IHRydWUsXG4gICAgICBoaWRlUGF5V2l0aENyeXB0bzogdHJ1ZSxcbiAgICAgIHVzZVBhcGVyS2V5OiBmYWxzZVxuICAgIH0pXG4gIH0pO1xuICBjb25zdCBqc29uID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgaW52YXJpYW50KGpzb24uY2hlY2tvdXRMaW5rSW50ZW50VXJsLCBcIkZhaWxlZCB0byBjcmVhdGUgY2hlY2tvdXQgbGluayBpbnRlbnRcIik7XG4gIHJldHVybiBqc29uLmNoZWNrb3V0TGlua0ludGVudFVybDtcbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY2xhc3MgUGFwZXJDaGVja291dCB7XG4gIGNvbnN0cnVjdG9yKGNvbnRyYWN0V3JhcHBlcikge1xuICAgIHRoaXMuY29udHJhY3RXcmFwcGVyID0gY29udHJhY3RXcmFwcGVyO1xuICB9XG4gIGFzeW5jIGdldENoZWNrb3V0SWQoKSB7XG4gICAgcmV0dXJuIGZldGNoUmVnaXN0ZXJlZENoZWNrb3V0SWQodGhpcy5jb250cmFjdFdyYXBwZXIuYWRkcmVzcywgYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIuZ2V0Q2hhaW5JRCgpKTtcbiAgfVxuICBhc3luYyBpc0VuYWJsZWQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAhIShhd2FpdCB0aGlzLmdldENoZWNrb3V0SWQoKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGFzeW5jIGNyZWF0ZUxpbmtJbnRlbnQocGFyYW1zKSB7XG4gICAgcmV0dXJuIGF3YWl0IGNyZWF0ZUNoZWNrb3V0TGlua0ludGVudChhd2FpdCB0aGlzLmdldENoZWNrb3V0SWQoKSwgcGFyYW1zKTtcbiAgfVxufVxuXG5leHBvcnQgeyBQYXBlckNoZWNrb3V0IGFzIFAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-66d62250.browser.esm.js\n"));

/***/ })

}]);
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_pnpm_thirdweb-dev_sdk_4_0_54_ethers_5_7_2_typescript_4_9_5_node_modules_thirdweb-653816"],{

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/edition-70331503.browser.esm.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/edition-70331503.browser.esm.js ***!
  \*******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Edition: function() { return /* binding */ Edition; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ethers */ \"./node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-bb4cd7b2.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/index-bb4cd7b2.browser.esm.js\");\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contract-appuri-6693c1a8.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-appuri-6693c1a8.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fetchCurrencyValue-0cc57ba1.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-0cc57ba1.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./contract-interceptor-d7b164a7.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js\");\n/* harmony import */ var _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contract-owner-14a6d0f9.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-owner-14a6d0f9.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./contract-platform-fee-fda88a0f.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-fda88a0f.browser.esm.js\");\n/* harmony import */ var _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-roles-65ac12a4.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-roles-65ac12a4.browser.esm.js\");\n/* harmony import */ var _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-sales-5f56e732.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/contract-sales-5f56e732.browser.esm.js\");\n/* harmony import */ var _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./erc-1155-19e3f474.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-19e3f474.browser.esm.js\");\n/* harmony import */ var _erc_1155_standard_9662c39f_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./erc-1155-standard-9662c39f.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a collection of NFTs that lets you mint multiple copies of each NFT.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"edition\");\n * ```\n *\n * @internal\n * @deprecated use contract.erc1155 instead\n */\nclass Edition extends _erc_1155_standard_9662c39f_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.S {\n  static contractRoles = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.dC;\n\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.cr(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.bj.parse(abi || []);\n    this.metadata = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.C(this.contractWrapper, _index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.ci, this.storage);\n    this.app = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.b(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_roles_65ac12a4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.C(this.contractWrapper, Edition.contractRoles);\n    this.royalties = new _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.C(this.contractWrapper, this.metadata);\n    this.sales = new _contract_sales_5f56e732_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper);\n    this.encoder = new _fetchCurrencyValue_0cc57ba1_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.C(this.contractWrapper);\n    this.estimator = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.G(this.contractWrapper);\n    this.events = new _contract_appuri_6693c1a8_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.a(this.contractWrapper);\n    this.platformFees = new _contract_platform_fee_fda88a0f_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.C(this.contractWrapper);\n    this.interceptor = new _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper);\n    this.signature = new _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.a(this.contractWrapper, this.storage, this.roles);\n    this.owner = new _contract_owner_14a6d0f9_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a(this.contractWrapper);\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc1155.getAll(queryParams);\n  }\n\n  /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async getOwned(walletAddress, queryParams) {\n    return this.erc1155.getOwned(walletAddress, queryParams);\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @returns The total number of NFTs minted in this contract\n   * @public\n   */\n  async getTotalCount() {\n    return this.erc1155.totalCount();\n  }\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [(0,_index_bb4cd7b2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.H)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_15__.constants.AddressZero]);\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Mint NFT for the connected wallet\n   *\n   * @remarks See {@link Edition.mintTo}\n   */\n  mint = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.f)(async metadataWithSupply => {\n    return this.erc1155.mint.prepare(metadataWithSupply);\n  });\n\n  /**\n   * Mint an NFT with a limited supply\n   *\n   * @remarks Mint an NFT with a limited supply to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }\n   *\n   * const metadataWithSupply = {\n   *   metadata,\n   *   supply: 1000, // The number of this NFT you want to mint\n   * }\n   *\n   * const tx = await contract.mintTo(toAddress, metadataWithSupply);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   */\n  mintTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.f)(async (to, metadataWithSupply) => {\n    return this.erc1155.mintTo.prepare(to, metadataWithSupply);\n  });\n\n  /**\n   * Construct a mint transaction without executing it.\n   * This is useful for estimating the gas cost of a mint transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param receiver - Address you want to send the token to\n   * @param metadataWithSupply - The metadata of the NFT you want to mint\n   *\n   * @deprecated `contract.mint.prepare(...args)`\n   */\n  async getMintTransaction(receiver, metadataWithSupply) {\n    return this.erc1155.getMintTransaction(receiver, metadataWithSupply);\n  }\n\n  /**\n   * Increase the supply of an existing NFT and mint it to the connected wallet\n   *\n   * @param tokenId - the token id of the NFT to increase supply of\n   * @param additionalSupply - the additional amount to mint\n   */\n  mintAdditionalSupply = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.f)(async (tokenId, additionalSupply) => {\n    return this.erc1155.mintAdditionalSupply.prepare(tokenId, additionalSupply);\n  });\n\n  /**\n   * Increase the supply of an existing NFT and mint it to a given wallet address\n   *\n   * @param to - the address to mint to\n   * @param tokenId - the token id of the NFT to increase supply of\n   * @param additionalSupply - the additional amount to mint\n   */\n  mintAdditionalSupplyTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.f)(async (to, tokenId, additionalSupply) => {\n    return this.erc1155.mintAdditionalSupplyTo.prepare(to, tokenId, additionalSupply);\n  });\n\n  /**\n   * Mint Many NFTs for the connected wallet\n   *\n   * @remarks See {@link Edition.mintBatchTo}\n   */\n  mintBatch = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.f)(async metadatas => {\n    return this.erc1155.mintBatch.prepare(metadatas);\n  });\n\n  /**\n   * Mint Many NFTs with limited supplies\n   *\n   * @remarks Mint many different NFTs with limited supplies to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata and supplies of your NFTs\n   * const metadataWithSupply = [{\n   *   supply: 50, // The number of this NFT you want to mint\n   *   metadata: {\n   *     name: \"Cool NFT #1\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }, {\n   *   supply: 100,\n   *   metadata: {\n   *     name: \"Cool NFT #2\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }];\n   *\n   * const tx = await contract.mintBatchTo(toAddress, metadataWithSupply);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   */\n  mintBatchTo = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.f)(async (to, metadataWithSupply) => {\n    return this.erc1155.mintBatchTo.prepare(to, metadataWithSupply);\n  });\n\n  /**\n   * Burn a specified amount of a NFT\n   *\n   * @param tokenId - the token Id to burn\n   * @param amount - amount to burn\n   *\n   * @example\n   * ```javascript\n   * const result = await contract.burnTokens(tokenId, amount);\n   * ```\n   */\n  burn = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.f)(async (tokenId, amount) => {\n    return this.erc1155.burn.prepare(tokenId, amount);\n  });\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/edition-70331503.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js ***!
  \*****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ StandardErc1155; }\n/* harmony export */ });\n/* harmony import */ var _transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transactions-791a33b3.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/transactions-791a33b3.browser.esm.js\");\n/* harmony import */ var _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./erc-1155-19e3f474.browser.esm.js */ \"./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-19e3f474.browser.esm.js\");\n\n\n\n/**\n * Standard ERC1155 NFT functions\n * @remarks Basic functionality for a ERC1155 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.edition.transfer(walletAddress, tokenId, quantity);\n * ```\n * @public\n */\nclass StandardErc1155 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc1155 = new _erc_1155_19e3f474_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.E(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  ////// Standard ERC1155 functions //////\n\n  /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const nft = await contract.get(\"0\");\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc1155.get(tokenId);\n  }\n\n  /**\n   * Returns the total supply of a specific token\n   * @param tokenId - The token ID to get the total supply of\n   * @returns The total supply\n   */\n  async totalSupply(tokenId) {\n    return this.erc1155.totalSupply(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check NFT balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0; // Id of the NFT to check\n   * const balance = await contract.balanceOf(walletAddress, tokenId);\n   * ```\n   */\n  async balanceOf(address, tokenId) {\n    return this.erc1155.balanceOf(address, tokenId);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance(tokenId) {\n    return this.erc1155.balance(tokenId);\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc1155.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   * const tokenId = \"0\"; // The token ID of the NFT you want to send\n   * const amount = 3; // How many copies of the NFTs to transfer\n   * await contract.transfer(toAddress, tokenId, amount);\n   * ```\n   */\n  transfer = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((() => {\n    var _this = this;\n    return async function (to, tokenId, amount) {\n      let data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0];\n      return _this.erc1155.transfer.prepare(to, tokenId, amount, data);\n    };\n  })());\n\n  /**\n   * Transfer multiple NFTs\n   * \n   * @remarks Transfer multiple NFTs from the connected wallet to another wallet.\n   * \n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFTs to\n   * const toAddress = \"{{wallet_address}}\";\n   * // Array of token IDs of the NFTs you want to send\n   * const tokenIds = [\"0\", \"1\", \"2\"];\n   * // Array of amounts of the NFTs you want to send\n   * const amounts = [1, 2, 3];\n   * await contract.transferBatch(toAddress, tokenIds, amounts);\n   * ```\n   */\n  transferBatch = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((() => {\n    var _this2 = this;\n    return async function (to, tokenIds, amounts, fromAddress) {\n      let data = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0];\n      return _this2.erc1155.transferBatch.prepare(to, tokenIds, amounts, fromAddress, data);\n    };\n  })());\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  setApprovalForAll = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(async (operator, approved) => {\n    return this.erc1155.setApprovalForAll.prepare(operator, approved);\n  });\n\n  /**\n   * Airdrop multiple NFTs\n   *\n   * @remarks Airdrop one or multiple NFTs to the provided wallet addresses.\n   * @twfeature ERC1155\n   * @example\n   * ```javascript\n   * // The token ID of the NFT you want to airdrop\n   * const tokenId = \"0\";\n   * // Array of objects of addresses and quantities to airdrop NFTs to\n   * const addresses = [\n   *  {\n   *    address: \"0x...\",\n   *    quantity: 2,\n   *  },\n   *  {\n   *   address: \"0x...\",\n   *    quantity: 3,\n   *  },\n   * ];\n   * await contract.airdrop(tokenId, addresses);\n   *\n   * // You can also pass an array of addresses, it will airdrop 1 NFT per address\n   * const tokenId = \"0\";\n   * const addresses = [\n   *  \"0x...\", \"0x...\", \"0x...\",\n   * ]\n   * await contract.airdrop(tokenId, addresses);\n   * ```\n   */\n  airdrop = /* @__PURE__ */(0,_transactions_791a33b3_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((() => {\n    var _this3 = this;\n    return async function (tokenId, addresses, fromAddress) {\n      let data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0];\n      return _this3.erc1155.airdrop.prepare(tokenId, addresses, fromAddress, data);\n    };\n  })());\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.54_ethers@5.7.2_typescript@4.9.5/node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-9662c39f.browser.esm.js\n"));

/***/ })

}]);